"use client";
import { useEffect, useState } from "react";
import HeroPost from '../../post/HeroPost/page';
const TextArea = () => {
  const [text, setText] = useState("");
  const [textarea, setTextArea] = useState("");
  const [getResult, setGetResult] = useState("");
  const [loading, setLoading] = useState(false);
  const [copied, setCopied] = useState(false); // To manage the copied state

  const submitHandler = () => {
    setLoading(true);
    setTextArea(text);
  };

  const fetchApi = async () => {
    try {
      const response = await fetch("https://ai-convertor.vercel.app/api/translates", {
        method: "POST",
        body: JSON.stringify({ textarea }),
      });

      const data = await response.json();
      setLoading(false);
      setGetResult(data.translatedText);
    } catch (error) {
      console.log(error);
      setLoading(false);
    }
  };

  useEffect(() => {
    if (textarea) fetchApi();
  }, [textarea]);

  // Copy the translated text to the clipboard
  const copyToClipboard = () => {
    if (getResult) {
      navigator.clipboard.writeText(getResult).then(() => {
        setCopied(true); // Set copied state to true
        setTimeout(() => setCopied(false), 2000); // Reset after 2 seconds
      });
    }
  };

  return (
    <>
      <div className="flex flex-col justify-center items-center p-5 bg-black min-h-screen">
        <h2 className="text-white text-2xl mb-4 text-center">
          What is AI Text to Human Text Converter?
        </h2>
        <p className="text-gray-300 mb-8 text-center max-w-xl">
          The AI Text to Human Text Converter is a tool that helps transform AI-generated text into human-readable format.
          <br />
          This tool increases your writing productivity by converting text generated by AI tools like ChatGPT, Claude, Bard, Gemini, and others into human-friendly language, all for free!
          Just copy the AI text, paste it into the textarea, and click "Submit." Wait for 2-3 seconds, and your AI text will be converted into human text.
        </p>

        <div className="flex flex-col sm:flex-row bg-black w-full p-5 space-y-4 sm:space-y-0 sm:space-x-4">
          {/* Input Area */}
          <div className="flex-1 bg-gray-800 shadow-lg rounded-lg p-6">
            <h2 className="text-xl font-bold text-white text-center mb-4">
              Translate Your Text
            </h2>
            <textarea
              name="input"
              id="input"
              cols={80}
              rows={10}
              placeholder="Enter your input text..."
              className="w-full p-4 border border-gray-600 rounded-lg focus:outline-none resize-none bg-gray-900 text-white"
              onChange={(e) => setText(e.target.value)}
              value={text}
            ></textarea>
            <div className="flex justify-center mt-5">
              <button
                className="bg-blue-600 hover:bg-blue-700 text-white font-semibold px-6 py-2 rounded-lg shadow-md transition duration-300 ease-in-out"
                onClick={submitHandler}
              >
                Submit
              </button>
            </div>
          </div>

          {/* Result Area */}
          <div className="flex-1 bg-gray-800 shadow-lg rounded-lg p-6 flex flex-col items-center justify-center">
            {loading ? (
              <div className="animate-spin h-12 w-12 border-4 border-t-transparent border-blue-600 rounded-full"></div>
            ) : (
              <>
                <h2 className="text-xl font-semibold text-white p-2">AI to Human Rewriter</h2>
                <div className="text-lg text-gray-300 mb-4 overflow-y-auto w-full border border-gray-600 p-2 rounded-lg max-h-48">
                  {getResult ? getResult : "Your translated text will appear here..."}
                </div>
                {getResult && (
                  <button
                    className="bg-green-500 hover:bg-green-600 text-white font-semibold px-4 py-2 rounded-lg shadow-md transition duration-300 ease-in-out"
                    onClick={copyToClipboard}
                  >
                    {copied ? "Copied!" : "Copy"}
                  </button>
                )}
              </>
            )}
          </div>
        </div>
        <HeroPost/>
      </div>
    </>
  );
};

export default TextArea;
